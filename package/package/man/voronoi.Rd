% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/voronoi.R
\name{voronoi}
\alias{voronoi}
\title{Get Voronoi triangle and Delaunay triangulation}
\usage{
voronoi(point = NULL, options = NULL, full = TRUE)
}
\arguments{
\item{point}{\code{point} is an \code{n}-by-\code{dim} dataframe. The rows of \code{point} represent \code{n} points in \code{dim}-dimensional space.}

\item{options}{String containing extra options for the underlying Qhull command.(See the Qhull documentation (\url{../doc/html/qvoronoi.html}) for the available options.) The
\code{Qbb} option is always passed to Qhull. The default options are \code{Qcc Qc Qt Qz} for \code{dim} <4 and \code{Qcc Qc Qt
Qx} for \code{dim}>=4.  If neither of the \code{QJ} or \code{Qt} options are supplied, the \code{Qt} option is passed to Qhull.
The \code{Qt} option ensures all Delaunay regions are simplical (e.g., triangles in 2-d).  See \url{../doc/html/qdelaun.html} for more details.}

\item{full}{Return all information associated with triangulation as a list. This will return the triangulation (\code{tri}), list ofvoronoi Vertices (\code{voronoiVertices}) , vpoints (\code{points}) ,matrix list of the circum radii (\code{circumRadii}), matrix list of (\code{SimplicesPoints})  and a list of neighbours of each facet (\code{neighbours}).}
}
\value{
The voronoi vertics, circumRadii,trigulation Points and Delaunay triangulation
}
\description{
Get Voronoi vertices(circumcenters of Delaunay triangle) and Delaunay triangulation in N-dimensions using the qhull library. The Voronoi diagram is the nearest-neighbor map 
for a set of points. Each region contains those points that are nearer one input site than any other input site. They can also be describe as the circumcenters of Delaunay triangle.
The Delaunay triangulation is a tessellation of the convex hull ofthe points such that no N-sphere defined by the N-triangles contains any other points from the set.
}
\examples{
x = c(30,70,20,50,40,70)
y = c(35,80,70,50,60,20)
p = data.frame(x,y)
voronoi(point =p)
}
