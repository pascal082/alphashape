% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delaunay.R
\name{delaunay}
\alias{delaunay}
\title{Delaunay triangulation in N-dimensions.}
\usage{
delaunay(points = NULL)
}
\arguments{
\item{point}{\code{point} is an \code{n}-by-\code{dim} dataframevor matrix. The rows of
\code{point} represent \code{n} points in \code{dim}-dimensional
space.}

\item{options}{String containing extra options for the underlying Qhull command.(See the Qhull documentation (\url{../doc/html/qdelaun.html}) for the available options.) The
\code{Qbb} option is always passed to Qhull. The default options are \code{Qcc Qc Qt Qz} for \code{dim} <4 and \code{Qcc Qc Qt Qx} for \code{dim}>=4.  If neither of the \code{QJ} or \code{Qt}
options are supplied, the \code{Qt} option is passed to Qhull. The \code{Qt} option ensures all Delaunay regions are simplical
(e.g., triangles in 2-d).  See \url{../doc/html/qdelaun.html} for more details. The degenerate (zero area) regions are returned For silent operation, specify the option \code{Pp}.}

\item{full}{Return all information associated with the triangulation as a list and these are triangulation (\code{tri}), a  vector of facet areas (\code{areas}) and a list of neighbours of
each facet (\code{neighbours}) OR return the convexhull and the input point}
}
\description{
The Delaunay triangulation is a tessellation of the convex hull of the points such that no N-sphere defined by the N-triangles
contains any other points from the set. This function calculates the Delaunay triangulation  in N-dimensions using the qhull library
}
\examples{
# Define points
x <- c(30, 70, 20, 50, 40, 70)
y <- c(35, 80, 70, 50, 60, 20)
p <- data.frame(x, y)
# Create Delaunay triangulation and plot
dt <- delaunay(points = p)
plot(p, pch = as.character(seq(nrow(p))))
}
