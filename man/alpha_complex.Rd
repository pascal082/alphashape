% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alpha-complex.R
\name{alpha_complex}
\alias{alpha_complex}
\title{Alpha complex}
\usage{
alpha_complex(points = NULL, alpha = NULL)
}
\arguments{
\item{points}{a \eqn{n}-by-\eqn{d} dataframe or matrix. The rows
represent \eqn{n} points and the \eqn{d} columns the coordinates in 
\eqn{d}-dimensional space.}

\item{alpha}{a positive number that defines the maximum circumradii for a 
simplex to be included in the alpha complex.}
}
\value{
Returns a list consisting of: [1] a \eqn{n}-by-\eqn{d+1} matrix of 
point indices that define the 
\href{https://en.wikipedia.org/wiki/Simplex}{simplices} that make up the
alpha complex; [2] a list circumcentres for each simplex ; [3] a list of 
circumradii for each simplex; and [4] the input points used to create the 
alpha complex.
}
\description{
This function calculates the 
\href{https://en.wikipedia.org/wiki/Alpha_shape}{alpha complex} of a set
of \eqn{n} points in \eqn{d}-dimensional space using the
\href{http://www.qhull.org}{Qhull} library.
}
\examples{
# Define points
x <- c(30, 70, 20, 50, 40, 70)
y <- c(35, 80, 70, 50, 60, 20)
p <- data.frame(x, y)
# Create alpha complex and plot
a_complex <- alpha_complex(points = p, alpha = 20)
plot(p, pch = as.character(seq(nrow(p))))
for (s in seq(nrow(a_complex$simplices))) {
  polygon(a_complex$input_points[a_complex$simplices[s,],], border="red")
  text(x=colMeans(a_complex$input_points[a_complex$simplices[s,],])[1],
       y=colMeans(a_complex$input_points[a_complex$simplices[s,],])[2],
       labels=s, col="red")
}
}
\references{
Barber CB, Dobkin DP, Huhdanpaa H (1996) The Quickhull algorithm 
for convex hulls. ACM Transactions on Mathematical Software, 22(4):469-83 
\url{https://doi.org/10.1145/235815.235821}.
}
